(function() {
  var Element, core, debug, elementMap, elementProcessor, expect, map, projectMap, util;

  map = require("../index");

  expect = require('chai').expect;

  util = require("util");

  Element = require("./util/element");

  debug = require("debug")("coffeemapper:tests:map-test");

  core = new Element;

  core.push(new Element({
    name: "VisualStudioVersion",
    properties: ["12.0.30501.0"]
  }));

  core.push(new Element({
    name: "MinimumVisualStudioVersion",
    properties: ["10"]
  }));

  core.push(new Element({
    name: "Project",
    properties: ["WebApplication1", "WebApplication1\\WebApplication1.csproj", "{DAA7C8D8-63E8-4587-842D-B39F01718BF8}"]
  }));

  core.push(new Element({
    name: "Project",
    properties: ["ConsoleApplication1", "ConsoleApplication1\\ConsoleApplication1.csproj", "{B68291DE-FCED-46E0-85EE-F273AA73448F}"]
  }));

  elementProcessor = {
    newItem: function() {
      return new Element;
    },
    setValue: function(item, key, value) {
      return item[key] = value;
    },
    getValue: function(item, key) {
      return item[key];
    }
  };

  projectMap = {
    read: {
      "name": function(src, resolve, reject) {
        debug("projectMap.read.name", src.properties[0]);
        return resolve(src.properties[0]);
      },
      "path": function(src, resolve, reject) {
        debug("projectMap.read.path", src.properties[1]);
        return resolve(src.properties[1]);
      },
      "id": function(src, resolve, reject) {
        debug("projectMap.read.id", src.properties[2]);
        return resolve(src.properties[2]);
      }
    },
    write: {
      "name": function(src, resolve, reject) {
        return resolve("Project");
      },
      "properties": function(src, resolve, reject) {
        return resolve([src.name, src.path, src.id]);
      }
    }
  };

  elementMap = {
    read: {
      "VisualStudioVersion": function(src, resolve, reject) {
        var value;
        value = src.getElement("VisualStudioVersion").properties[0];
        debug("elementMap.read.VisualStudioVersion", value);
        return resolve(value);
      },
      "Projects": function(src, resolve, reject) {
        var projects;
        projects = src.getElementsByName("Project");
        debug("elementMap.read.Projects", projects);
        return map(projects, projectMap.read).then(resolve, reject);
      }
    },
    write: {
      "elements": function(src, resolve, reject) {
        var data;
        data = [];
        data.push(new Element({
          name: "VisualStudioVersion",
          properties: [src.VisualStudioVersion]
        }));
        return map(src.Projects, projectMap.write, elementProcessor).then(function(result) {
          var r, _i, _len;
          for (_i = 0, _len = result.length; _i < _len; _i++) {
            r = result[_i];
            data.push(r);
          }
          return resolve(data);
        }, reject);
      }
    }
  };

  describe('Object Mapping', function() {
    it('coffeemapper Test', function() {
      debug("read start");
      return map(core, elementMap.read).then(function(result) {
        debug("read complete", util.inspect(result[0]));
        expect(result[0].Projects[0].name).to.equal("WebApplication1");
        debug("write start");
        return map(result[0], elementMap.write, elementProcessor).then(function(re) {
          expect(re[0].elements[1].name).to.equal("Project");
          return debug("write complete");
        });
      });
    });
    return it('context check', function() {
      var test;
      test = {};
      return map({
        hello: "hi"
      }, {
        "troll": function(src, resolve, reject) {
          return resolve(src.hello);
        }
      }, null, test).then(function(o) {
        return expect(test.troll).to.equal("hi");
      });
    });
  });


  /*
  Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "WebApplication1", "WebApplication1\WebApplication1.csproj", "{DAA7C8D8-63E8-4587-842D-B39F01718BF8}"
    ProjectSection(ProjectDependencies) = postProject
      {B68291DE-FCED-46E0-85EE-F273AA73448F} = {B68291DE-FCED-46E0-85EE-F273AA73448F}
    EndProjectSection
  EndProject
  Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "ConsoleApplication1", "ConsoleApplication1\ConsoleApplication1.csproj", "{B68291DE-FCED-46E0-85EE-F273AA73448F}"
  EndProject
   */

}).call(this);
